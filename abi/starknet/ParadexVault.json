[
    {
        "type": "impl",
        "name": "ERC20Metadata",
        "interface_name": "openzeppelin_token::erc20::interface::IERC20Metadata"
    },
    {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
            {
                "name": "data",
                "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
                "name": "pending_word",
                "type": "core::felt252"
            },
            {
                "name": "pending_word_len",
                "type": "core::integer::u32"
            }
        ]
    },
    {
        "type": "interface",
        "name": "openzeppelin_token::erc20::interface::IERC20Metadata",
        "items": [
            {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::byte_array::ByteArray"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::byte_array::ByteArray"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "decimals",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u8"
                    }
                ],
                "state_mutability": "view"
            }
        ]
    },
    {
        "type": "impl",
        "name": "SRC5Implementation",
        "interface_name": "openzeppelin_introspection::interface::ISRC5"
    },
    {
        "type": "enum",
        "name": "core::bool",
        "variants": [
            {
                "name": "False",
                "type": "()"
            },
            {
                "name": "True",
                "type": "()"
            }
        ]
    },
    {
        "type": "interface",
        "name": "openzeppelin_introspection::interface::ISRC5",
        "items": [
            {
                "type": "function",
                "name": "supports_interface",
                "inputs": [
                    {
                        "name": "interface_id",
                        "type": "core::felt252"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "view"
            }
        ]
    },
    {
        "type": "impl",
        "name": "Vault",
        "interface_name": "paradex_vaults::vault::interface::IVault"
    },
    {
        "type": "struct",
        "name": "core::integer::u256",
        "members": [
            {
                "name": "low",
                "type": "core::integer::u128"
            },
            {
                "name": "high",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "interface",
        "name": "paradex_vaults::vault::interface::IVault",
        "items": [
            {
                "type": "function",
                "name": "get_version",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::felt252"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "operator",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "status",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::felt252"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "close",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "asset",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "is_initialised",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "token",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "profit_share_percentage",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u128"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "tvl_limit",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u128"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "set_tvl_limit",
                "inputs": [
                    {
                        "name": "new_tvl_limit",
                        "type": "core::integer::u128"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "lockup_period_seconds",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u128"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "set_lockup_period_seconds",
                "inputs": [
                    {
                        "name": "new_lockup_period_seconds",
                        "type": "core::integer::u128"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "paraclear",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "min_owner_share_percentage",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u128"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "total_assets",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "convert_to_shares",
                "inputs": [
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "convert_to_assets",
                "inputs": [
                    {
                        "name": "shares",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "deposit",
                "inputs": [
                    {
                        "name": "assets",
                        "type": "core::integer::u256"
                    },
                    {
                        "name": "receiver",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "request_withdrawal",
                "inputs": [
                    {
                        "name": "shares",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "set_withdrawal_mode",
                "inputs": [
                    {
                        "name": "mode",
                        "type": "core::integer::u8"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "donate",
                "inputs": [
                    {
                        "name": "assets",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "max_deposit",
                "inputs": [
                    {
                        "name": "receiver",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "max_withdraw",
                "inputs": [
                    {
                        "name": "receiver",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "avg_deposit_time",
                "inputs": [
                    {
                        "name": "receiver",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "authorized_transfer",
                "inputs": [
                    {
                        "name": "from",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "to",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::felt252"
                    }
                ],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "impl",
        "name": "ERC20Impl",
        "interface_name": "openzeppelin_token::erc20::interface::IERC20"
    },
    {
        "type": "interface",
        "name": "openzeppelin_token::erc20::interface::IERC20",
        "items": [
            {
                "type": "function",
                "name": "total_supply",
                "inputs": [],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "balance_of",
                "inputs": [
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "allowance",
                "inputs": [
                    {
                        "name": "owner",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "spender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::integer::u256"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "transfer",
                "inputs": [
                    {
                        "name": "recipient",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "transfer_from",
                "inputs": [
                    {
                        "name": "sender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "recipient",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "approve",
                "inputs": [
                    {
                        "name": "spender",
                        "type": "core::starknet::contract_address::ContractAddress"
                    },
                    {
                        "name": "amount",
                        "type": "core::integer::u256"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "impl",
        "name": "AccessControlImpl",
        "interface_name": "openzeppelin_access::accesscontrol::interface::IAccessControl"
    },
    {
        "type": "interface",
        "name": "openzeppelin_access::accesscontrol::interface::IAccessControl",
        "items": [
            {
                "type": "function",
                "name": "has_role",
                "inputs": [
                    {
                        "name": "role",
                        "type": "core::felt252"
                    },
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::bool"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "get_role_admin",
                "inputs": [
                    {
                        "name": "role",
                        "type": "core::felt252"
                    }
                ],
                "outputs": [
                    {
                        "type": "core::felt252"
                    }
                ],
                "state_mutability": "view"
            },
            {
                "type": "function",
                "name": "grant_role",
                "inputs": [
                    {
                        "name": "role",
                        "type": "core::felt252"
                    },
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "revoke_role",
                "inputs": [
                    {
                        "name": "role",
                        "type": "core::felt252"
                    },
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            },
            {
                "type": "function",
                "name": "renounce_role",
                "inputs": [
                    {
                        "name": "role",
                        "type": "core::felt252"
                    },
                    {
                        "name": "account",
                        "type": "core::starknet::contract_address::ContractAddress"
                    }
                ],
                "outputs": [],
                "state_mutability": "external"
            }
        ]
    },
    {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
            {
                "name": "factory",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "vault_owner",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "vault_operator",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "paraclear",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "asset",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "profit_share_percentage",
                "type": "core::integer::u128"
            },
            {
                "name": "tvl_limit",
                "type": "core::integer::u128"
            },
            {
                "name": "lockup_period_seconds",
                "type": "core::integer::u128"
            },
            {
                "name": "min_owner_share_percentage",
                "type": "core::integer::u128"
            }
        ]
    },
    {
        "type": "function",
        "name": "upgrade",
        "inputs": [
            {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "burn",
        "inputs": [
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "function",
        "name": "burn_admin",
        "inputs": [
            {
                "name": "sender",
                "type": "core::starknet::contract_address::ContractAddress"
            },
            {
                "name": "amount",
                "type": "core::integer::u256"
            }
        ],
        "outputs": [],
        "state_mutability": "external"
    },
    {
        "type": "event",
        "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
        "kind": "struct",
        "members": [
            {
                "name": "role",
                "type": "core::felt252",
                "kind": "data"
            },
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "sender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGrantedWithDelay",
        "kind": "struct",
        "members": [
            {
                "name": "role",
                "type": "core::felt252",
                "kind": "data"
            },
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "sender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "delay",
                "type": "core::integer::u64",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
        "kind": "struct",
        "members": [
            {
                "name": "role",
                "type": "core::felt252",
                "kind": "data"
            },
            {
                "name": "account",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "sender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
        "kind": "struct",
        "members": [
            {
                "name": "role",
                "type": "core::felt252",
                "kind": "data"
            },
            {
                "name": "previous_admin_role",
                "type": "core::felt252",
                "kind": "data"
            },
            {
                "name": "new_admin_role",
                "type": "core::felt252",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "RoleGranted",
                "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
                "kind": "nested"
            },
            {
                "name": "RoleGrantedWithDelay",
                "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGrantedWithDelay",
                "kind": "nested"
            },
            {
                "name": "RoleRevoked",
                "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
                "kind": "nested"
            },
            {
                "name": "RoleAdminChanged",
                "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_introspection::src5::SRC5Component::Event",
        "kind": "enum",
        "variants": []
    },
    {
        "type": "event",
        "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "struct",
        "members": [
            {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Upgraded",
                "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
        "kind": "struct",
        "members": [
            {
                "name": "from",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "to",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
        "kind": "struct",
        "members": [
            {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "key"
            },
            {
                "name": "value",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "Transfer",
                "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
                "kind": "nested"
            },
            {
                "name": "Approval",
                "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
                "kind": "nested"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::Deposit",
        "kind": "struct",
        "members": [
            {
                "name": "caller",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "receiver",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "tokenIn",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "amountDeposited",
                "type": "core::integer::u256",
                "kind": "data"
            },
            {
                "name": "amountSyOut",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::Withdraw",
        "kind": "struct",
        "members": [
            {
                "name": "caller",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "receiver",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "tokenOut",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "amountSyToWithdraw",
                "type": "core::integer::u256",
                "kind": "data"
            },
            {
                "name": "amountTokenOut",
                "type": "core::integer::u256",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::VaultClosed",
        "kind": "struct",
        "members": [
            {
                "name": "caller",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::VaultTvlLimitUpdated",
        "kind": "struct",
        "members": [
            {
                "name": "caller",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "tvl_limit",
                "type": "core::integer::u128",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::VaultLockupPeriodUpdated",
        "kind": "struct",
        "members": [
            {
                "name": "caller",
                "type": "core::starknet::contract_address::ContractAddress",
                "kind": "data"
            },
            {
                "name": "lockup_period_seconds",
                "type": "core::integer::u128",
                "kind": "data"
            }
        ]
    },
    {
        "type": "event",
        "name": "paradex_vaults::vault::vault::Vault::Event",
        "kind": "enum",
        "variants": [
            {
                "name": "AccessControlEvent",
                "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
                "kind": "flat"
            },
            {
                "name": "SRC5Event",
                "type": "openzeppelin_introspection::src5::SRC5Component::Event",
                "kind": "flat"
            },
            {
                "name": "UpgradeableEvent",
                "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
                "kind": "flat"
            },
            {
                "name": "ERC20Event",
                "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
                "kind": "flat"
            },
            {
                "name": "Deposit",
                "type": "paradex_vaults::vault::vault::Vault::Deposit",
                "kind": "nested"
            },
            {
                "name": "Withdraw",
                "type": "paradex_vaults::vault::vault::Vault::Withdraw",
                "kind": "nested"
            },
            {
                "name": "VaultClosed",
                "type": "paradex_vaults::vault::vault::Vault::VaultClosed",
                "kind": "nested"
            },
            {
                "name": "VaultTvlLimitUpdated",
                "type": "paradex_vaults::vault::vault::Vault::VaultTvlLimitUpdated",
                "kind": "nested"
            },
            {
                "name": "VaultLockupPeriodUpdated",
                "type": "paradex_vaults::vault::vault::Vault::VaultLockupPeriodUpdated",
                "kind": "nested"
            }
        ]
    }
]